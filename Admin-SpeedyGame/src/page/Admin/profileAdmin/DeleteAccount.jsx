import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { AuthService } from '../../../services/authService.js';
import './DeleteAccount.css';

const DeleteAccount = ({ onClose, onSuccess }) => {
  const [password, setPassword] = useState('');
  const [confirmChecked, setConfirmChecked] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  
  const navigate = useNavigate();

  const handleDeleteAccount = async (e) => {
    e.preventDefault();
    
    // Validation
    if (!password.trim()) {
      setError('Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ x√°c nh·∫≠n');
      return;
    }
    
    if (!confirmChecked) {
      setError('B·∫°n ph·∫£i x√°c nh·∫≠n ƒë√£ hi·ªÉu v·ªÅ vi·ªác x√≥a t√†i kho·∫£n');
      return;
    }

    setLoading(true);
    setError('');

    try {
      // Call delete account API
      await AuthService.deleteAccount({ password });
      
      // Clear local storage
      AuthService.logout();
      
      // Success callback
      if (onSuccess) {
        onSuccess('T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng');
      }
      
      // Navigate to login page
      navigate('/login');
      
    } catch (err) {
      console.error('Delete account error:', err);
      
      if (err.status === 401) {
        setError('M·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c');
      } else if (err.status === 400) {
        setError(err.message || 'D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá');
      } else if (err.status === 500) {
        setError('L·ªói server. Vui l√≤ng th·ª≠ l·∫°i sau');
      } else {
        setError(err.message || 'C√≥ l·ªói x·∫£y ra khi x√≥a t√†i kho·∫£n');
      }
    } finally {
      setLoading(false);
    }
  };

  const handleOverlayClick = (e) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  return (
    <div className="delete-account-modal" onClick={handleOverlayClick}>
      <div className="delete-account-dialog">
        <button 
          className="delete-account-close"
          onClick={onClose}
          disabled={loading}
        >
          ‚úï
        </button>
        
        <div className="delete-account-header">
          <span className="delete-account-icon">‚ö†Ô∏è</span>
          <h2 className="delete-account-title">X√≥a T√†i Kho·∫£n</h2>
          <p className="delete-account-subtitle">
            H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c
          </p>
        </div>

        <div className="delete-account-body">
          <div className="delete-account-warning">
            <h4>‚ö†Ô∏è C·∫£nh b√°o quan tr·ªçng:</h4>
            <ul>
              <li>T√†i kho·∫£n c·ªßa b·∫°n s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn</li>
              <li>T·∫•t c·∫£ d·ªØ li·ªáu c√° nh√¢n s·∫Ω b·ªã m·∫•t</li>
              <li>L·ªãch s·ª≠ game v√† ƒëi·ªÉm s·ªë s·∫Ω b·ªã x√≥a</li>
              <li>Kh√¥ng th·ªÉ kh√¥i ph·ª•c sau khi x√≥a</li>
              <li>B·∫°n s·∫Ω b·ªã ƒëƒÉng xu·∫•t kh·ªèi t·∫•t c·∫£ thi·∫øt b·ªã</li>
            </ul>
          </div>

          <form onSubmit={handleDeleteAccount} className="delete-account-form">
            <div className="delete-account-input-group">
              <label htmlFor="password" className="delete-account-label">
                Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ x√°c nh·∫≠n:
              </label>
              <input
                id="password"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className={`delete-account-input ${error && !password ? 'error' : ''}`}
                placeholder="M·∫≠t kh·∫©u hi·ªán t·∫°i"
                disabled={loading}
                autoFocus
              />
            </div>

            <div className="delete-account-checkbox-group">
              <input
                id="confirm-delete"
                type="checkbox"
                checked={confirmChecked}
                onChange={(e) => setConfirmChecked(e.target.checked)}
                className="delete-account-checkbox"
                disabled={loading}
              />
              <label htmlFor="confirm-delete" className="delete-account-checkbox-label">
                T√¥i hi·ªÉu r·∫±ng vi·ªác x√≥a t√†i kho·∫£n l√† kh√¥ng th·ªÉ ho√†n t√°c v√† t√¥i s·∫Ω m·∫•t 
                t·∫•t c·∫£ d·ªØ li·ªáu li√™n quan ƒë·∫øn t√†i kho·∫£n n√†y.
              </label>
            </div>

            {error && (
              <div className="delete-account-error">
                <span>‚ùå</span>
                {error}
              </div>
            )}

            <div className="delete-account-actions">
              <button
                type="button"
                className="delete-account-btn delete-account-btn-cancel"
                onClick={onClose}
                disabled={loading}
              >
                H·ªßy
              </button>
              <button
                type="submit"
                className="delete-account-btn delete-account-btn-delete"
                disabled={loading || !password || !confirmChecked}
              >
                {loading ? (
                  <div className="delete-account-loading">
                    <div className="delete-account-spinner"></div>
                    ƒêang x√≥a...
                  </div>
                ) : (
                  'üóëÔ∏è X√≥a T√†i Kho·∫£n'
                )}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default DeleteAccount;